@use '../foundation' as *;
@use '../global' as *;
@use '../layout';
@use '../object';

/* ======================================= */
/* 初回ローディング
/* ======================================= */
.loading {
  background-color: $baseC;
  position: fixed;
  inset: 0;
  display: grid;
  place-content: center;
  transition: all 0.5s;
  z-index: calc(infinity);
  &-border {
    width: 150px;
    height: 150px;
    padding: 3px;
    display: flex;
    justify-content: center;
    align-items: center;
    border-radius: 50%;
    background: $mainC;
    background: linear-gradient(0deg, rgba($mainC, 0.1) 33%, rgba($mainC, 1) 100%);
    animation: loading 0.8s linear 0s infinite;
  }
  &-core {
    width: 100%;
    height: 100%;
    background-color: $baseC;
    border-radius: 50%;
  }
}

@keyframes loading {
  from {
    transform: rotate(0);
  }
  to {
    transform: rotate(359deg);
  }
}

/* ======================================= */
/* 　タイトルエリア
/* ======================================= */
.pagetitle {
  align-content: center;
  display: grid;
  min-height: clamp(200px, 30vw, 400px);
  overflow: hidden;
  place-content: center;
  position: relative;
  text-align: center;
  &::before,
  &::after {
    background-color: rgba(0, 0, 0, 0.5);
    content: '';
    position: absolute;
    top: 0;
    left: -20vw;
    width: 140vw;
    height: 100%;
    z-index: 1;
  }
  &::before {
    @include animation($name: hero-before, $duration: 0.5s, $timing-function: ease, $delay: 0.4s, $fill-mode: both);
    rotate: 45deg;
    transform-origin: center;
    @keyframes hero-before {
      0% {
        translate: -150vw -150vw;
      }

      100% {
        translate: 0 0;
      }
    }
  }
  &::after {
    @include animation($name: hero-after, $duration: 0.5s, $timing-function: ease, $delay: 0.9s, $fill-mode: both);
    rotate: -45deg;
    transform-origin: center;
    @keyframes hero-after {
      0% {
        translate: 150vw -150vw;
      }

      100% {
        translate: 0 0;
      }
    }
  }
  &__image {
    inset: 0;
    position: absolute;
    img {
      height: 100%;
      object-fit: cover;
      object-position: center;
      width: 100%;
    }
  }
  &__en {
    color: #ffffff;
    font: {
      family: 'Caveat Brush', cursive;
      weight: 400;
      size: clamp(50px, 6vw, 72px);
    }
    line-height: 1;
    letter-spacing: 0.2em;
    margin-bottom: 10px;
    position: relative;
    z-index: 2;
  }
  &__ja {
    color: #ffffff;
    font: {
      family: 'Roboto', sans-serif;
      weight: 700;
      size: clamp(20px, 5vw, 25px);
    }
    letter-spacing: 0.1em;
    position: relative;
    z-index: 2;
  }
  span {
    display: inline-block;
    @include animation($name: kf-animate-chars, $duration: 0.5s, $timing-function: cubic-bezier(0.39, 1.57, 0.58, 1), $fill-mode: both);
    @for $i from 1 through 18 {
      &:nth-child(#{$i}) {
        animation-delay: ($i * 0.08s) + 1.2s;
      }
    }

    @keyframes kf-animate-chars {
      0% {
        opacity: 0;
        transform: translateY(-50%);
      }

      100% {
        opacity: 1;
        transform: translateY(0);
      }
    }
  }
}

/* ======================================= */
/* 　ブログエリア
/* ======================================= */
.blog-area {
  color: #ffffff;
  padding: 60px 0 140px;
  position: relative;
  &::before {
    background: rgba(175, 74, 1, 0.5);
    backdrop-filter: blur(5px);
    content: '';
    display: block;
    height: 100%;
    position: absolute;
    inset: 0;
    width: 100%;
    z-index: 1;
  }
  &__image {
    inset: 0;
    position: absolute;
    img {
      height: 100%;
      object-fit: cover;
      object-position: center;
      width: 100%;
    }
  }
  &__wrap {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    position: relative;
    text-align: center;
    z-index: 1;
    p {
      word-break: keep-all;
      overflow-wrap: anywhere;
    }
  }
  &__button {
    display: flex;
    justify-content: center;
    align-items: flex-start;
    gap: 40px;
    margin-top: 30px;
    :hover {
      &::after {
        background: url(/img/common/icon_link-external.svg) no-repeat center / contain;
      }
    }
  }
  @include mq(sp) {
    &__button {
      display: flex;
      flex-direction: column;
      justify-content: center;
      align-items: flex-start;
      gap: 20px;
      margin-top: 30px;
      :hover {
        &::after {
          background: url(/img/common/icon_link-external.svg) no-repeat center / contain;
        }
      }
    }
  }
}

/* =============================== */
/* アイコン
================================== */
$icon-images: (
  'tab': 'icon-tab.svg',
);
.icon {
  @each $class, $icon-image in $icon-images {
    &-#{$class} {
      background: url('/img/common/' + $icon-image) no-repeat center right/auto 1.5em;
      display: inline-block;
      padding-right: 2em;
    }
  }
}
